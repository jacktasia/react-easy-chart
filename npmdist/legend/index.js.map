{"version":3,"sources":["../../modules/legend/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAM,gBAAgB;AACpB,aAAW;AACT,kBAAc,MAAd;AACA,YAAQ,CAAR;AACA,aAAS,CAAT;GAHF;AAKA,gBAAc;AACZ,aAAS,OAAT;AACA,gBAAY,MAAZ;AACA,iBAAa,MAAb;AACA,kBAAc,KAAd;AACA,iBAAa,MAAb;AACA,cAAU,UAAV;GANF;AAQA,2BAAyB;AACvB,aAAS,cAAT;GADF;AAGA,mBAAiB;AACf,WAAO,MAAP;AACA,YAAQ,MAAR;AACA,kBAAc,KAAd;AACA,cAAU,UAAV;AACA,UAAM,GAAN;AACA,SAAK,KAAL;AACA,eAAW,MAAX;GAPF;CAjBI;;AA4BN,IAAM,SAAS,SAAM,UAAN,GAAmB,KAAnB,EAAT;;IAEe;;;;;wBAEI;AACrB,aAAO;AACL,gBAAQ,gBAAM,SAAN,CAAgB,KAAhB;AACR,cAAM,gBAAM,SAAN,CAAgB,KAAhB,CAAsB,UAAtB;AACN,gBAAQ,gBAAM,SAAN,CAAgB,MAAhB,CAAuB,UAAvB;AACR,oBAAY,gBAAM,SAAN,CAAgB,IAAhB;AACZ,gBAAQ,gBAAM,SAAN,CAAgB,MAAhB;OALV,CADqB;;;;AAUvB,WAZmB,MAYnB,CAAY,KAAZ,EAAmB;0BAZA,QAYA;;uEAZA,mBAaX,QADW;;AAEjB,UAAK,IAAL,GAAY,EAAZ,CAFiB;;GAAnB;;eAZmB;;yCAiBE;;;AACnB,UAAM,SAAS,KAAK,KAAL,CAAW,MAAX,CADI;AAEnB,WAAK,KAAL,CAAW,IAAX,CAAgB,GAAhB,CACE,UAAC,IAAD,EAAU;AACR,YAAM,QAAQ,OAAK,IAAL,CAAU,SAAV,CAAoB,UAAC,GAAD;iBAAS,QAAQ,KAAK,MAAL,CAAR;SAAT,CAA5B,CADE;AAER,YAAI,UAAU,CAAC,CAAD,EAAI,OAAK,IAAL,CAAU,IAAV,CAAe,KAAK,MAAL,CAAf,EAAlB;OAFF,CADF,CAFmB;;;;8BAUX;;;AACR,UAAM,KAAK,KAAK,KAAL,CAAW,UAAX,GAAwB,YAAxB,GAAuC,EAAvC,CADH;AAER,aACE,KAAK,IAAL,CAAU,GAAV,CACE,UAAC,IAAD,EAAO,KAAP,EAAiB;AACf,eACE;;YAAI,KAAK,KAAL,EAAY,WAAW,EAAX,EAAhB;UACE;AACE,uBAAU,MAAV;AACA,mBAAO,EAAC,iBAAiB,OAAK,YAAL,CAAkB,KAAlB,CAAjB,EAAR;WAFF,CADF;UAMC,IAND;SADF,CADe;OAAjB,CAFJ,CAFQ;;;;iCAoBG,OAAO;AAClB,UAAI,OAAO,KAAK,KAAL,CAAW,MAAX,KAAsB,WAA7B,EAA0C;AAC5C,YAAI,KAAK,KAAL,CAAW,MAAX,CAAkB,MAAlB,GAA2B,KAA3B,EAAkC;AACpC,iBAAO,KAAK,KAAL,CAAW,MAAX,CAAkB,KAAlB,EAAyB,KAAzB,CAD6B;SAAtC;OADF;AAKA,aAAO,OAAO,KAAP,CAAP,CANkB;;;;6BASX;AACP,UAAM,MAAM,KAAK,KAAL,CAAW,KAAK,MAAL,KAAgB,IAAI,IAAJ,GAAW,OAAX,EAAhB,CAAjB,CADC;AAEP,aACE;;UAAK,iCAA+B,GAA/B,EAAL;QACE;AACE,gDAAoC,GAApC;AACA,iBAAO,sBAAM,EAAN,EAAU,aAAV,EAAyB,KAAK,KAAL,CAAW,MAAX,CAAhC;SAFF,CADF;QAKE;;YAAI,WAAU,QAAV,EAAJ;UAAwB,KAAK,OAAL,EAAxB;SALF;OADF,CAFO;;;;SAxDU;EAAe,gBAAM,SAAN;;kBAAf","file":"index.js","sourcesContent":["import React from 'react';\nimport { Style } from 'radium';\nimport {scale} from 'd3';\nimport merge from 'lodash.merge';\n\nconst defaultStyles = {\n  '.legend': {\n    'list-style': 'none',\n    margin: 0,\n    padding: 0\n  },\n  '.legend li': {\n    display: 'block',\n    lineHeight: '24px',\n    marginRight: '24px',\n    marginBottom: '6px',\n    paddingLeft: '24px',\n    position: 'relative'\n  },\n  '.legend li.horizontal': {\n    display: 'inline-block'\n  },\n  '.legend .icon': {\n    width: '12px',\n    height: '12px',\n    borderRadius: '6px',\n    position: 'absolute',\n    left: '0',\n    top: '50%',\n    marginTop: '-6px'\n  }\n};\n\nconst colors = scale.category20().range();\n\nexport default class Legend extends React.Component {\n\n  static get propTypes() {\n    return {\n      config: React.PropTypes.array,\n      data: React.PropTypes.array.isRequired,\n      dataId: React.PropTypes.string.isRequired,\n      horizontal: React.PropTypes.bool,\n      styles: React.PropTypes.object\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.tags = [];\n  }\n\n  componentWillMount() {\n    const dataId = this.props.dataId;\n    this.props.data.map(\n      (item) => {\n        const index = this.tags.findIndex((tag) => tag === item[dataId]);\n        if (index === -1) this.tags.push(item[dataId]);\n      }\n    );\n  }\n\n  getList() {\n    const cn = this.props.horizontal ? 'horizontal' : '';\n    return (\n      this.tags.map(\n        (item, index) => {\n          return (\n            <li key={index} className={cn}>\n              <span\n                className=\"icon\"\n                style={{backgroundColor: this.getIconColor(index)}}\n              >\n            </span>\n            {item}\n            </li>\n          );\n        }\n      )\n    );\n  }\n\n  getIconColor(index) {\n    if (typeof this.props.config !== 'undefined') {\n      if (this.props.config.length > index) {\n        return this.props.config[index].color;\n      }\n    }\n    return colors[index];\n  }\n\n  render() {\n    const uid = Math.floor(Math.random() * new Date().getTime());\n    return (\n      <div className={`legend-container-${uid}`}>\n        <Style\n          scopeSelector={`.legend-container-${uid}`}\n          rules={merge({}, defaultStyles, this.props.styles)}\n        />\n        <ul className=\"legend\">{this.getList()}</ul>\n      </div>\n    );\n  }\n}\n"]}