{"version":3,"sources":["../../modules/legend/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;AAGA;;;;AAEA;;;;;;AAEA,IAAM,SAAS,SAAM,UAAN,GAAmB,KAAnB,EAAf;;IAEqB,M;;;;wBAEI;AACrB,aAAO;AACL,gBAAQ,gBAAM,SAAN,CAAgB,KADnB;AAEL,cAAM,gBAAM,SAAN,CAAgB,KAAhB,CAAsB,UAFvB;AAGL,cAAM,gBAAM,SAAN,CAAgB,KAHjB;AAIL,gBAAQ,gBAAM,SAAN,CAAgB,MAAhB,CAAuB,UAJ1B;AAKL,oBAAY,gBAAM,SAAN,CAAgB,IALvB;AAML,gBAAQ,gBAAM,SAAN,CAAgB;AANnB,OAAP;AAQD;;;wBAEyB;AACxB,aAAO;AACL,cAAM;AADD,OAAP;AAGD;;;AAED,kBAAY,KAAZ,EAAmB;AAAA;;AAAA,gHACX,KADW;;AAEjB,UAAK,GAAL,GAAW,4BAAe,KAAf,CAAX;AAFiB;AAGlB;;;;uCAEkB,K,EAAO;AAAA,UAEtB,MAFsB,GAGpB,KAAK,KAHe,CAEtB,MAFsB;;;AAKxB,UAAI,OAAO,MAAP,KAAkB,WAAtB,EAAmC;AACjC,YAAI,OAAO,MAAP,GAAgB,KAApB,EAA2B;AACzB,iBAAO,OAAO,KAAP,EAAc,KAArB;AACD;AACF;AACD,aAAO,OAAO,KAAP,CAAP;AACD;;;mCAEc;AAAA;;AAAA,mBAMT,KAAK,KANI;AAAA,UAEX,MAFW,UAEX,MAFW;AAAA,UAGX,IAHW,UAGX,IAHW;AAAA,UAIX,IAJW,UAIX,IAJW;AAAA,UAKX,UALW,UAKX,UALW;;;AAQb,UAAM,YACH,UAAD,GACI,YADJ,GAEI,KAHN;;AAKA,WAAK,OAAL,CAAa,UAAC,IAAD,EAAU;AACrB,YAAM,QAAQ,KAAK,SAAL,CAAe,UAAC,GAAD;AAAA,iBAAS,QAAQ,KAAK,MAAL,CAAjB;AAAA,SAAf,CAAd;AACA,YAAI,QAAQ,CAAZ,EAAe,KAAK,IAAL,CAAU,KAAK,MAAL,CAAV;AAChB,OAHD;;AAKA,aACE;AAAA;AAAA,UAAI,WAAU,QAAd;AACG,aAAK,GAAL,CAAS,UAAC,IAAD,EAAO,KAAP,EAAiB;AACzB,cAAM,kBAAgB,KAAtB;AACA,cAAM,kBAAkB,OAAK,kBAAL,CAAwB,KAAxB,CAAxB;AACA,iBACE;AAAA;AAAA,cAAI,KAAK,GAAT,EAAc,WAAW,SAAzB;AACE;AACE,yBAAU,MADZ;AAEE,qBAAO,EAAE,gCAAF;AAFT,cADF;AAKG;AALH,WADF;AASD,SAZA;AADH,OADF;AAiBD;;;kCAEa;AAAA,UAEV,MAFU,GAGR,KAAK,KAHG,CAEV,MAFU;;;AAKZ,UAAM,MAAM,KAAK,GAAjB;AACA,UAAM,QAAQ,sBAAM,EAAN,2BAAyB,MAAzB,CAAd;AACA,UAAM,+BAA6B,GAAnC;;AAEA,aACE;AACE,uBAAe,KADjB;AAEE,eAAO;AAFT,QADF;AAMD;;;6BAEQ;AACP,UAAM,MAAM,KAAK,GAAjB;AACA,UAAM,kCAAgC,GAAtC;AACA,aACE;AAAA;AAAA,UAAK,WAAW,SAAhB;AACG,aAAK,WAAL,EADH;AAEG,aAAK,YAAL;AAFH,OADF;AAMD;;;EApGiC,gBAAM,S;;kBAArB,M","file":"index.js","sourcesContent":["import React from 'react';\nimport { Style } from 'radium';\nimport { scale } from 'd3';\nimport {\n  createUniqueID\n} from '../shared';\nimport merge from 'lodash.merge';\n\nimport defaultStyles from './defaultStyles';\n\nconst colors = scale.category20().range();\n\nexport default class Legend extends React.Component {\n\n  static get propTypes() {\n    return {\n      config: React.PropTypes.array,\n      data: React.PropTypes.array.isRequired,\n      tags: React.PropTypes.array,\n      dataId: React.PropTypes.string.isRequired,\n      horizontal: React.PropTypes.bool,\n      styles: React.PropTypes.object\n    };\n  }\n\n  static get defaultProps() {\n    return {\n      tags: []\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.uid = createUniqueID(props);\n  }\n\n  getBackgroundColor(index) {\n    const {\n      config\n    } = this.props;\n\n    if (typeof config !== 'undefined') {\n      if (config.length > index) {\n        return config[index].color;\n      }\n    }\n    return colors[index];\n  }\n\n  createLegend() {\n    const {\n      dataId,\n      data,\n      tags,\n      horizontal\n    } = this.props;\n\n    const className =\n      (horizontal)\n        ? 'horizontal'\n        : false;\n\n    data.forEach((item) => {\n      const index = tags.findIndex((tag) => tag === item[dataId]);\n      if (index < 0) tags.push(item[dataId]);\n    });\n\n    return (\n      <ul className=\"legend\">\n        {tags.map((item, index) => {\n          const key = `legend-${index}`;\n          const backgroundColor = this.getBackgroundColor(index);\n          return (\n            <li key={key} className={className}>\n              <span\n                className=\"icon\"\n                style={{ backgroundColor }}\n              />\n              {item}\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n\n  createStyle() {\n    const {\n      styles\n    } = this.props;\n\n    const uid = this.uid;\n    const rules = merge({}, defaultStyles, styles);\n    const scope = `.legend-container-${uid}`;\n\n    return (\n      <Style\n        scopeSelector={scope}\n        rules={rules}\n      />\n    );\n  }\n\n  render() {\n    const uid = this.uid;\n    const className = `legend-container-${uid}`;\n    return (\n      <div className={className}>\n        {this.createStyle()}\n        {this.createLegend()}\n      </div>\n    );\n  }\n}\n"]}