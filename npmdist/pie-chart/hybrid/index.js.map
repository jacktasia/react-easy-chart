{"version":3,"sources":["../../../modules/pie-chart/hybrid/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport {\n  scale,\n  layout,\n  svg,\n  select,\n  event as lastEvent,\n  interpolate\n} from 'd3';\nimport {\n  createUniqueID,\n  defaultStyles\n} from '../../shared';\nimport { createElement } from 'react-faux-dom';\nimport { Style } from 'radium';\nimport merge from 'lodash.merge';\n\nconst color = scale.category20();\nconst pie = layout.pie()\n  .value((d) => d.value)\n  .sort(null);\n\nconst getSliceFill = (d, i) => (\n  (d.data.color)\n    ? d.data.color\n    : color(i));\n\nconst getLabelText = (d) => d.data.key;\n\nexport default class PieChart extends React.Component {\n  static get propTypes() {\n    return {\n      data: React.PropTypes.array.isRequired,\n      innerHoleSize: React.PropTypes.number,\n      size: React.PropTypes.number,\n      padding: React.PropTypes.number,\n      labels: React.PropTypes.bool,\n      styles: React.PropTypes.object,\n      mouseOverHandler: React.PropTypes.func,\n      mouseOutHandler: React.PropTypes.func,\n      mouseMoveHandler: React.PropTypes.func,\n      clickHandler: React.PropTypes.func\n    };\n  }\n\n  static get defaultProps() {\n    return {\n      size: 400,\n      innerHoleSize: 0,\n      padding: 2,\n      labels: false,\n      styles: {},\n      mouseOverHandler: () => {},\n      mouseOutHandler: () => {},\n      mouseMoveHandler: () => {},\n      clickHandler: () => {}\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.uid = createUniqueID(props);\n    this.currentSlices = [];\n    this.currentLabels = [];\n    this.tweenSlice = (slice, index) => {\n      const currentSlice = this.currentSlices[index];\n      const i = interpolate(currentSlice, slice);\n      this.currentSlices[index] = slice;\n      return (t) => this.getSliceArc()(i(t));\n    };\n  }\n\n  componentDidMount() {\n    this.initialise();\n  }\n\n  componentDidUpdate() {\n    this.transition();\n  }\n\n  getSliceArc() {\n    const {\n      padding\n    } = this.props;\n\n    const innerRadius = this.getInnerRadius();\n    const outerRadius = this.getOuterRadius();\n\n    return svg.arc()\n      .innerRadius(innerRadius - padding)\n      .outerRadius(outerRadius - padding);\n  }\n\n  getLabelArc() {\n    const {\n      padding\n    } = this.props;\n\n    const outerRadius = this.getOuterRadius();\n    const radius = outerRadius - padding - ((20 * outerRadius) / 100);\n\n    return svg.arc()\n      .outerRadius(radius)\n      .innerRadius(radius);\n  }\n\n  getOuterRadius() {\n    return this.props.size * 0.5;\n  }\n\n  getInnerRadius() {\n    return this.props.innerHoleSize * 0.5;\n  }\n\n  getSlices() {\n    const {\n      data\n    } = this.props;\n\n    const uid = this.uid;\n\n    return select(`#slices-${uid}`)\n      .datum(data)\n      .selectAll('path');\n  }\n\n  getLabels() {\n    const {\n      data\n    } = this.props;\n\n    const uid = this.uid;\n\n    return select(`#labels-${uid}`)\n      .datum(data)\n      .selectAll('text');\n  }\n\n  createSvgNode({ size }) {\n    const node = createElement('svg');\n    node.setAttribute('width', size);\n    node.setAttribute('height', size);\n    return node;\n  }\n\n  createSvgRoot({ node }) {\n    return select(node);\n  }\n\n  initialiseLabels() {\n    const text = this.getLabels()\n      .data(pie);\n\n    const getLabelArcTransform = (d) => {\n      const [labelX, labelY] = this.getLabelArc().centroid(d);\n      return `translate(${labelX}, ${labelY})`;\n    };\n\n    const currentLabels = this.currentLabels;\n\n    text\n      .enter()\n      .append('text')\n      .attr('dy', '.35em')\n      .attr('class', 'pie-chart-label')\n      .attr('transform', getLabelArcTransform)\n      .text(getLabelText)\n      .each((d) => currentLabels.push(d));\n  }\n\n  initialiseSlices() {\n    const {\n      mouseOverHandler,\n      mouseOutHandler,\n      mouseMoveHandler,\n      clickHandler\n    } = this.props;\n\n    const mouseover = (d) => mouseOverHandler(d, lastEvent);\n    const mouseout = (d) => mouseOutHandler(d, lastEvent);\n    const mousemove = (d) => mouseMoveHandler(d, lastEvent);\n    const click = (d) => clickHandler(d, lastEvent);\n\n    const currentSlices = this.currentSlices;\n\n    const path = this.getSlices()\n      .data(pie);\n\n    path\n      .enter()\n      .append('path')\n      .attr('class', 'pie-chart-slice')\n      .attr('fill', getSliceFill)\n      .attr('d', this.getSliceArc())\n      .on('mouseover', mouseover)\n      .on('mouseout', mouseout)\n      .on('mousemove', mousemove)\n      .on('click', click)\n      .each((d) => currentSlices.push(d));\n  }\n\n  initialise() {\n    const {\n      labels\n    } = this.props;\n\n    this.initialiseSlices();\n\n    if (labels) {\n      this.initialiseLabels();\n    }\n  }\n\n  transitionSlices() {\n    const {\n      data,\n      mouseOverHandler,\n      mouseOutHandler,\n      mouseMoveHandler,\n      clickHandler\n    } = this.props;\n\n    const mouseover = (d) => mouseOverHandler(d, lastEvent);\n    const mouseout = (d) => mouseOutHandler(d, lastEvent);\n    const mousemove = (d) => mouseMoveHandler(d, lastEvent);\n    const click = (d) => clickHandler(d, lastEvent);\n\n    const n = data.length;\n    const currentSlices = this.currentSlices;\n\n    const path = this.getSlices()\n      .data(pie);\n\n    if (n) { // we don't need to do this, but it's fun\n      /*\n       * Change current slices\n       * Transition current slice dimensions\n       */\n      path\n        .attr('fill', getSliceFill)\n        .on('mouseover', mouseover)\n        .on('mouseout', mouseout)\n        .on('mousemove', mousemove)\n        .on('click', click)\n        .transition()\n        .duration(750)\n        .attrTween('d', this.tweenSlice);\n\n      /*\n       * Add new slices\n       */\n      path\n        .enter()\n        .append('path')\n        .attr('class', 'pie-chart-slice')\n        .attr('fill', getSliceFill)\n        .on('mouseover', mouseover)\n        .on('mouseout', mouseout)\n        .on('mousemove', mousemove)\n        .on('click', click)\n        .each((d, i) => currentSlices.splice(i, 1, d))\n        .transition()\n        .duration(750)\n        .attrTween('d', this.tweenSlice);\n    }\n\n    /*\n     * Remove old slices\n     */\n    path\n      .exit()\n      .remove();\n\n    currentSlices.length = n; // = this.currentSlices.slice(0, n)\n  }\n\n  transitionLabels() {\n    const {\n      data\n    } = this.props;\n\n    const getLabelArcTransform = (d) => {\n      const [labelX, labelY] = this.getLabelArc().centroid(d);\n      return `translate(${labelX}, ${labelY})`;\n    };\n\n    const n = data.length;\n    const currentLabels = this.currentLabels;\n    const text = this.getLabels()\n      .data(pie);\n\n    if (n) { // we don't need to do this, but it's fun\n      /*\n       * Change current labels\n       */\n      text\n        .transition()\n        .duration(750)\n        .attr('transform', getLabelArcTransform)\n        .text(getLabelText);\n\n      /*\n       * Add new labels\n       */\n      text\n        .enter()\n        .append('text')\n        .attr('dy', '.35em')\n        .attr('class', 'pie-chart-label')\n        .attr('transform', getLabelArcTransform)\n        .text(getLabelText)\n        .each((d, i) => currentLabels.splice(i, 1, d))\n        .transition()\n        .duration(750);\n    }\n\n    /*\n     * Remove old labels\n     */\n    text\n      .exit()\n      .remove();\n\n    currentLabels.length = n;\n  }\n\n  transition() {\n    const {\n      labels\n    } = this.props;\n\n    this.transitionSlices();\n\n    if (labels) {\n      this.transitionLabels();\n    }\n  }\n\n  createSlices({ root }) {\n    const uid = this.uid;\n    const radius = this.getOuterRadius();\n\n    root\n      .append('g')\n      .attr('id', `slices-${uid}`)\n      .attr('transform', `translate(${radius}, ${radius})`);\n  }\n\n  createLabels({ root }) {\n    const uid = this.uid;\n    const radius = this.getOuterRadius();\n\n    root\n      .append('g')\n      .attr('id', `labels-${uid}`)\n      .attr('transform', `translate(${radius}, ${radius})`);\n  }\n\n  createStyle() {\n    const {\n      styles\n    } = this.props;\n\n    const uid = this.uid;\n    const scope = `.pie-chart-${uid}`;\n    const rules = merge({}, defaultStyles, styles);\n\n    return (\n      <Style\n        scopeSelector={scope}\n        rules={rules}\n      />\n    );\n  }\n\n  calculateChartParameters() {\n    const {\n      size\n    } = this.props;\n\n    const node = this.createSvgNode({ size });\n    const root = this.createSvgRoot({ node });\n\n    return {\n      node,\n      root\n    };\n  }\n\n  render() {\n    const {\n      labels\n    } = this.props;\n\n    const p = this.calculateChartParameters();\n\n    this.createSlices(p);\n\n    if (labels) {\n      this.createLabels(p);\n    }\n\n    const uid = this.uid;\n    const className = `pie-chart-${uid}`;\n    const {\n      node\n    } = p;\n\n    return (\n      <div className={className}>\n        {this.createStyle()}\n        {node.toReact()}\n      </div>\n    );\n  }\n}\n"]}