{"version":3,"sources":["../../modules/area-chart/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport { createElement } from 'react-faux-dom';\nimport {\n  createUniqueID,\n  reduce,\n  createValueGenerator,\n  calculateMargin,\n  createDomainRangeGenerator,\n  defaultColors,\n  defaultStyles,\n  getAxisStyles,\n  createCircularTicks\n} from '../shared';\nimport {\n  event as lastEvent,\n  select,\n  svg,\n  time } from 'd3';\nimport { Style } from 'radium';\nimport merge from 'lodash.merge';\nimport { timeParse as parse } from 'd3-time-format';\n\nconst dateParser = {};\n\nexport default class AreaChart extends React.Component {\n  static get propTypes() {\n    return {\n      data: React.PropTypes.array.isRequired,\n      width: React.PropTypes.number,\n      height: React.PropTypes.number,\n      xType: React.PropTypes.string,\n      yType: React.PropTypes.string,\n      datePattern: React.PropTypes.string,\n      interpolate: React.PropTypes.string,\n      style: React.PropTypes.object,\n      margin: React.PropTypes.object,\n      axes: React.PropTypes.bool,\n      grid: React.PropTypes.bool,\n      verticalGrid: React.PropTypes.bool,\n      xDomainRange: React.PropTypes.array,\n      yDomainRange: React.PropTypes.array,\n      areaColors: React.PropTypes.array,\n      noAreaGradient: React.PropTypes.bool,\n      tickTimeDisplayFormat: React.PropTypes.string,\n      yTicks: React.PropTypes.number,\n      xTicks: React.PropTypes.number,\n      dataPoints: React.PropTypes.bool,\n      axisLabels: React.PropTypes.shape({\n        x: React.PropTypes.string,\n        y: React.PropTypes.string\n      }),\n      yAxisOrientRight: React.PropTypes.bool,\n      mouseOverHandler: React.PropTypes.func,\n      mouseOutHandler: React.PropTypes.func,\n      mouseMoveHandler: React.PropTypes.func,\n      clickHandler: React.PropTypes.func\n    };\n  }\n\n  static get defaultProps() {\n    return {\n      width: 200,\n      height: 150,\n      datePattern: '%d-%b-%y',\n      interpolate: 'linear',\n      axes: false,\n      areaColors: [],\n      xType: 'linear',\n      yType: 'linear',\n      axisLabels: {\n        x: '',\n        y: ''\n      },\n      mouseOverHandler: () => {},\n      mouseOutHandler: () => {},\n      mouseMoveHandler: () => {},\n      clickHandler: () => {}\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.uid = createUniqueID(props);\n  }\n\n  componentDidMount() {\n    const ref = this.refs.areaChart;\n    createCircularTicks(ref);\n  }\n\n  componentDidUpdate() {\n    const ref = this.refs.areaChart;\n    createCircularTicks(ref);\n  }\n\n  createSvgNode({ m, w, h }) {\n    const node = createElement('svg');\n    node.setAttribute('width', w + m.left + m.right);\n    node.setAttribute('height', h + m.top + m.bottom);\n    return node;\n  }\n\n  createSvgRoot({ node, m }) {\n    return select(node)\n      .append('g')\n      .attr('transform', `translate(${m.left}, ${m.top})`);\n  }\n\n  createXAxis({ root, m, w, h, x }) {\n    const {\n      xType,\n      axisLabels: { x: label },\n      xTicks,\n      grid,\n      verticalGrid,\n      tickTimeDisplayFormat,\n      yAxisOrientRight\n    } = this.props;\n\n    const axis = svg.axis()\n      .scale(x)\n      .orient('bottom');\n\n    if (xType === 'time' && tickTimeDisplayFormat) {\n      axis\n        .tickFormat(time.format(tickTimeDisplayFormat));\n    }\n    if (grid && verticalGrid) {\n      axis\n        .tickSize(-h, 6)\n        .tickPadding(15);\n    } else {\n      axis\n        .tickSize(0)\n        .tickPadding(15);\n    }\n\n    if (xTicks) {\n      axis\n        .ticks(xTicks);\n    }\n\n    const group = root\n      .append('g')\n      .attr('class', 'x axis')\n      .attr('transform', `translate(0, ${h})`);\n\n    group\n      .call(axis);\n\n    if (label) {\n      group\n        .append('text')\n        .attr('class', 'label')\n        .attr('x',\n          (yAxisOrientRight)\n            ? 0\n            : w)\n        .attr('y', m.bottom - 10)\n        .style('text-anchor',\n          (yAxisOrientRight)\n            ? 'start'\n            : 'end')\n        .text(label);\n    }\n    return axis;\n  }\n\n  createYAxis({ root, m, w, y }) {\n    const {\n      yType,\n      axisLabels: { y: label },\n      yTicks,\n      grid,\n      tickTimeDisplayFormat,\n      yAxisOrientRight\n    } = this.props;\n\n    const axis = svg.axis()\n      .scale(y)\n      .orient(yAxisOrientRight ? 'right' : 'left');\n\n    if (yType === 'time' && tickTimeDisplayFormat) {\n      axis\n        .tickFormat(time.format(tickTimeDisplayFormat));\n    }\n\n    if (grid) {\n      axis\n        .tickSize(-w, 6)\n        .tickPadding(12);\n    } else {\n      axis\n        .tickPadding(10);\n    }\n\n    if (yTicks) {\n      axis\n        .ticks(yTicks);\n    }\n\n    const group = root\n      .append('g')\n      .attr('class', 'y axis')\n      .attr('transform',\n        (yAxisOrientRight)\n          ? `translate(${w}, 0)`\n          : 'translate(0, 0)');\n\n    group\n      .call(axis);\n\n    if (label) {\n      group\n        .append('text')\n        .attr('class', 'label')\n        .attr('transform', 'rotate(-90)')\n        .attr('x', 0)\n        .attr('y',\n          (yAxisOrientRight)\n            ? -20 + m.right\n            : 0 - m.left)\n        .attr('dy', '.9em')\n        .style('text-anchor', 'end')\n        .text(label);\n    }\n\n    return axis;\n  }\n\n  createFill({ node, colors }) {\n    const uid = this.uid;\n\n    colors.forEach((color, i) => {\n      const gradient = select(node)\n        .append('defs')\n        .append('linearGradient')\n        .attr('id', `gradient-${i}-${uid}`)\n        .attr('x1', '0%')\n        .attr('x2', '0%')\n        .attr('y1', '40%')\n        .attr('y2', '100%');\n\n      defaultStyles[`.dot${i}`] = { fill: color };\n\n      gradient\n        .append('stop')\n        .attr('offset', '0%')\n        .attr('style', `stop-color:${color}; stop-opacity:0.6`);\n\n      gradient\n        .append('stop')\n        .attr('offset', '100%')\n        .attr('style', `stop-color:${color}; stop-opacity:0.4`);\n    });\n  }\n\n  createAreaPathChart({ root, h, x, y, xValue, yValue, colors }) {\n    const {\n      data,\n      interpolate,\n      noAreaGradient\n    } = this.props;\n\n    const uid = this.uid;\n\n    const getFill = (d, i) => (\n      (noAreaGradient)\n        ? colors[i]\n        : `url(#gradient-${i}-${uid})`\n    );\n\n    const getStroke = (d, i) => colors[i];\n\n    const areaPath = svg.area()\n      .interpolate(interpolate)\n      .x((d) => x(xValue(d)))\n      .y0(h)\n      .y1((d) => y(yValue(d)));\n\n    const linePath = svg.line()\n      .interpolate(interpolate)\n      .x((d) => x(xValue(d)))\n      .y((d) => y(yValue(d)));\n\n    const group = root\n      .append('g')\n      .attr('class', 'areaChart');\n\n    group\n      .selectAll('path.area')\n      .data(data)\n      .enter()\n      .append('path')\n      .attr('class', 'area')\n      .style('fill', getFill)\n      .attr('d', areaPath);\n\n    group\n      .selectAll('path.line')\n      .data(data)\n      .enter()\n      .append('path')\n      .attr('class', 'line')\n      .style('stroke', getStroke)\n      .attr('d', linePath);\n  }\n\n  createPoints({ root, x, y, colors }) {\n    const {\n      data,\n      xType,\n      yType,\n      mouseOverHandler,\n      mouseOutHandler,\n      mouseMoveHandler,\n      clickHandler\n    } = this.props;\n\n    /*\n     * We don't really need to do this, but it\n     * avoids obscure \"this\" below\n     */\n    const calculateDate = (v) => this.parseDate(v);\n\n    const getStroke = (d, i) => colors[i];\n\n    /*\n     * Creating the calculation functions\n     */\n    const calculateCX = (d) => (\n      (xType === 'time')\n        ? x(calculateDate(d.x))\n        : x(d.x));\n\n    const calculateCY = (d) => (\n      (yType === 'time')\n        ? y(calculateDate(d.y))\n        : y(d.y));\n\n    const mouseover = (d) => mouseOverHandler(d, lastEvent);\n    const mouseout = (d) => mouseOutHandler(d, lastEvent);\n    const mousemove = (d) => mouseMoveHandler(d, lastEvent);\n    const click = (d) => clickHandler(d, lastEvent);\n\n    const group = root\n      .append('g')\n      .attr('class', 'dataPoints');\n\n    data.forEach((item) => {\n      item.forEach((d) => {\n        /*\n         * Applying the calculation functions\n         */\n        group\n          .datum(d)\n          .append('circle')\n          .attr('class', 'data-point')\n          .style('strokeWidth', '2px')\n          .style('stroke', getStroke)\n          .style('fill', 'white')\n          .attr('cx', calculateCX)\n          .attr('cy', calculateCY)\n          .on('mouseover', mouseover)\n          .on('mouseout', mouseout)\n          .on('mousemove', mousemove)\n          .on('click', click);\n      });\n    });\n  }\n\n  createStyle() {\n    const {\n      style,\n      grid,\n      verticalGrid,\n      yAxisOrientRight,\n    } = this.props;\n\n    const uid = this.uid;\n    const scope = `.area-chart-${uid}`;\n    const axisStyles = getAxisStyles(grid, verticalGrid, yAxisOrientRight);\n    const rules = merge({}, defaultStyles, style, axisStyles);\n\n    return (\n      <Style\n        scopeSelector={scope}\n        rules={rules}\n      />\n    );\n  }\n\n  parseDate(v) {\n    const {\n      datePattern\n    } = this.props;\n\n    const datePatternParser = (\n      dateParser[datePattern] || (\n      dateParser[datePattern] = parse(datePattern)));\n\n    return datePatternParser(v);\n  }\n\n  calculateChartParameters() {\n    const {\n      data,\n      xType,\n      yType,\n      axes,\n      xDomainRange,\n      yDomainRange,\n      yAxisOrientRight,\n      areaColors,\n      margin,\n      width,\n      height\n    } = this.props;\n\n    /*\n     * We could \"bind\"!\n     */\n    const parseDate = (v) => this.parseDate(v);\n\n    /*\n     * 'w' and 'h' are the width and height of the graph canvas\n     * (excluding axes and other furniture)\n     */\n    const m = calculateMargin(axes, margin, yAxisOrientRight);\n    const w = reduce(width, m.left, m.right);\n    const h = reduce(height, m.top, m.bottom);\n\n    const x = createDomainRangeGenerator('x', xDomainRange, data, xType, w, parseDate);\n    const y = createDomainRangeGenerator('y', yDomainRange, data, yType, h, parseDate);\n\n    const xValue = createValueGenerator('x', xType, parseDate);\n    const yValue = createValueGenerator('y', yType, parseDate);\n\n    const colors = areaColors.concat(defaultColors);\n\n    const node = this.createSvgNode({ m, w, h });\n    const root = this.createSvgRoot({ node, m });\n\n    return {\n      m,\n      w,\n      h,\n      x,\n      y,\n      xValue,\n      yValue,\n      colors,\n      node,\n      root\n    };\n  }\n\n  render() {\n    const {\n      axes,\n      dataPoints,\n      noAreaGradient\n    } = this.props;\n\n    const hasFill = !noAreaGradient;\n    const p = this.calculateChartParameters();\n\n    if (axes) {\n      this.createXAxis(p);\n\n      this.createYAxis(p);\n    }\n\n    if (hasFill) {\n      this.createFill(p);\n    }\n\n    this.createAreaPathChart(p);\n\n    if (dataPoints) {\n      this.createPoints(p);\n    }\n\n    const uid = this.uid;\n    const className = `area-chart-${uid}`;\n    const {\n      node\n    } = p;\n\n    return (\n      <div ref=\"areaChart\" className={className}>\n        {this.createStyle()}\n        {node.toReact()}\n      </div>\n    );\n  }\n}\n"]}