{"version":3,"sources":["../../../modules/scatterplot-chart/hybrid/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport {\n  scaleLinear as linear,\n  scalePoint as point\n} from 'd3-scale';\nimport {\n  event as lastEvent,\n  min,\n  max,\n  scale,\n  select,\n  svg,\n  time\n} from 'd3';\nimport { timeParse as parse } from 'd3-time-format';\nimport { extent } from 'd3-array';\nimport { createElement } from 'react-faux-dom';\nimport { Style } from 'radium';\nimport merge from 'lodash.merge';\nimport {\n  createUniqueID,\n  calculateDomainRange,\n  defaultStyles,\n  getAxisStyles,\n  createCircularTicks\n} from '../../shared';\n\nconst dateParser = {};\n\nconst color = scale.category20();\n\nconst axisMargin = 18;\n\nexport default class ScatterplotChart extends React.Component {\n  static get propTypes() {\n    return {\n      axes: React.PropTypes.bool,\n      axisLabels: React.PropTypes.shape({\n        x: React.PropTypes.string,\n        y: React.PropTypes.string\n      }),\n      clickHandler: React.PropTypes.func,\n      config: React.PropTypes.array,\n      data: React.PropTypes.array.isRequired,\n      datePattern: React.PropTypes.string,\n      yAxisOrientRight: React.PropTypes.bool,\n      dotRadius: React.PropTypes.number,\n      verticalGrid: React.PropTypes.bool,\n      grid: React.PropTypes.bool,\n      height: React.PropTypes.number,\n      useLegend: React.PropTypes.bool,\n      margin: React.PropTypes.object,\n      mouseOverHandler: React.PropTypes.func,\n      mouseOutHandler: React.PropTypes.func,\n      mouseMoveHandler: React.PropTypes.func,\n      style: React.PropTypes.object,\n      tickTimeDisplayFormat: React.PropTypes.string,\n      width: React.PropTypes.number,\n      xDomainRange: React.PropTypes.array,\n      yDomainRange: React.PropTypes.array,\n      xTickNumber: React.PropTypes.number,\n      yTickNumber: React.PropTypes.number,\n      xTicks: React.PropTypes.number,\n      yTicks: React.PropTypes.number,\n      xType: React.PropTypes.string,\n      yType: React.PropTypes.string\n    };\n  }\n\n  static get defaultProps() {\n    return {\n      axes: false,\n      axisLabels: {\n        x: '',\n        y: ''\n      },\n      clickHandler: () => {},\n      config: [],\n      datePattern: '%d-%b-%y',\n      dotRadius: 5,\n      grid: false,\n      mouseOverHandler: () => {},\n      mouseOutHandler: () => {},\n      mouseMoveHandler: () => {},\n      width: 320,\n      height: 180,\n      xType: 'linear',\n      yType: 'linear'\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.uid = createUniqueID(props);\n  }\n\n  componentDidMount() {\n    this.initialise();\n    const ref = this.refs.scatterplotChart;\n    createCircularTicks(ref);\n  }\n\n  componentDidUpdate() {\n    this.transition();\n    const ref = this.refs.scatterplotChart;\n    createCircularTicks(ref);\n  }\n\n  getScale(type) {\n    switch (type) {\n      case 'time':\n        return time.scale();\n      case 'text':\n        return point();\n      default:\n        return linear();\n    }\n  }\n\n  getDataConfig(type) {\n    const {\n      config\n    } = this.props;\n\n    const index = config.findIndex((item) => item.type === type);\n    return config[index];\n  }\n\n  getFill(data) {\n    const configItem = this.getDataConfig(data.type);\n    return (configItem)\n      ? configItem.color\n      : color(data.type);\n  }\n\n  getRadius(data, dataItem, dotRadius) {\n    if (typeof data[0].z !== 'undefined') {\n      const range = extent(data, (d) => d.z);\n      const mn = range[0];\n      const mx = range[1];\n      const p = ((dataItem.z - mn) / (mx - mn));\n      const minRad = 5;\n      const maxRad = 20;\n      const rad = minRad + ((maxRad - minRad) * p);\n      return rad;\n    }\n    return dotRadius;\n  }\n\n  getStroke(data) {\n    const configItem = this.getDataConfig(data.type);\n    return (configItem)\n      ? configItem.stroke\n      : 'none'; // typeof configItem !== 'undefined' ? configItem.stroke : 'none';\n  }\n\n  getCircles() {\n    const uid = this.uid;\n    return select(`#scatterplot-chart-${uid}`)\n      .selectAll('circle'); // '.dot'\n  }\n\n  getXAxis() {\n    const uid = this.uid;\n    return select(`#scatterplot-x-axis-${uid}`);\n  }\n\n  getYAxis() {\n    const uid = this.uid;\n    return select(`#scatterplot-y-axis-${uid}`);\n  }\n\n  createDomainRangeGenerator(axisType, domainRange, data, type, length, yAxisOrientRight) {\n    const dataIndex =\n      (axisType === 'x')\n        ? 'x'\n        : 'y';\n\n    let axis;\n    let minAmount;\n    let maxAmount;\n\n    const parseDate = (v) => this.parseDate(v);\n\n    switch (type) {\n      case 'text':\n        axis = point();\n        axis\n          .domain(data.map((d) => d[dataIndex]), 1)\n          .range([0, length])\n          .padding(1);\n        break;\n      case 'linear':\n        axis = linear();\n        minAmount = min(data, (d) => d[dataIndex]);\n        maxAmount = max(data, (d) => d[dataIndex]);\n        if (domainRange) {\n          axis\n            .domain(domainRange); // calculateDomainRange(domainRange, type, parseDate));\n        } else {\n          // set initial domain\n          axis\n            .domain([minAmount, maxAmount]);\n          // calculate 1 tick offset\n          const ticks = axis.ticks();\n\n          minAmount =\n            (yAxisOrientRight && axisType === 'x')\n              ? minAmount\n              : minAmount - (ticks[1] - ticks[0]);\n\n          maxAmount =\n            (yAxisOrientRight && axisType === 'x')\n              ? maxAmount + (ticks[1] - ticks[0])\n              : maxAmount;\n\n          axis\n            .domain([minAmount, maxAmount]);\n        }\n        axis\n          .range(\n            (axisType === 'x')\n              ? [0, length]\n              : [length, 0]);\n        break;\n      case 'time':\n        axis = time.scale();\n        axis\n          .domain(\n            (domainRange)\n              ? calculateDomainRange(domainRange)\n              : extent(data, (d) => parseDate(d[dataIndex])))\n          .range(\n            (axisType === 'x')\n              ? [0, length]\n              : [length, 0]);\n        break;\n      default:\n        break;\n    }\n    return axis;\n  }\n\n  calculateMargin(axes, spacer, yAxisOrientRight) {\n    if (yAxisOrientRight) {\n      return (axes)\n        ? { top: 24, right: 48, bottom: 24, left: 24 }\n        : { top: spacer, right: spacer, bottom: spacer, left: spacer };\n    }\n    return (axes)\n      ? { top: 24, right: 24, bottom: 24, left: 48 }\n      : { top: spacer, right: spacer, bottom: spacer, left: spacer };\n  }\n\n  calculateInnerW(w, m) {\n    return (w - (m.left + m.right));\n  }\n\n  calculateInnerH(h, m) {\n    const {\n      dotRadius\n    } = this.props;\n\n    return (h - (m.top + m.bottom + (dotRadius * 2)));\n  }\n\n  calculateXAxis({ h, x }) {\n    const {\n      xType,\n      tickTimeDisplayFormat,\n      xTickNumber,\n      grid,\n      verticalGrid,\n      xTicks\n    } = this.props;\n\n    const axis = svg.axis()\n      .scale(x)\n      .orient('bottom');\n\n    if (xType === 'time' && tickTimeDisplayFormat) {\n      axis\n        .tickFormat(time.format(tickTimeDisplayFormat));\n    }\n\n    if (xTickNumber) {\n      axis\n        .ticks(xTickNumber);\n    }\n\n    if (grid && verticalGrid) {\n      axis\n        .tickSize(-h, 6)\n        .tickPadding(15);\n    } else {\n      axis\n        .tickSize(0)\n        .tickPadding(15);\n    }\n\n    if (xTicks) {\n      axis\n        .ticks(xTicks);\n    }\n\n    return axis;\n  }\n\n  calculateYAxis({ y, innerW }) {\n    const {\n      grid,\n      yTicks,\n      yAxisOrientRight\n    } = this.props;\n\n    const axis = svg.axis()\n      .scale(y)\n      .orient(\n        (yAxisOrientRight)\n          ? 'right'\n          : 'left');\n\n    if (grid) {\n      axis\n        .tickSize(-innerW, 6)\n        .tickPadding(12);\n    } else {\n      axis\n        .tickPadding(10);\n    }\n\n    if (yTicks) {\n      axis\n        .ticks(yTicks);\n    }\n\n    return axis;\n  }\n\n  initialise() {\n    const {\n      axes\n    } = this.props;\n\n    const p = this.calculateChartParameters();\n\n    if (axes) {\n      this.initialiseXAxis(p);\n\n      this.initialiseYAxis(p);\n    }\n\n    this.initialiseChart(p);\n  }\n\n  initialiseXAxis({ xAxis }) {\n    this.getXAxis()\n      .call(xAxis);\n  }\n\n  initialiseYAxis({ yAxis }) {\n    this.getYAxis()\n      .call(yAxis);\n  }\n\n  initialiseChart({ x, y }) {\n    const {\n      data,\n      dotRadius,\n      xType,\n      mouseOverHandler,\n      mouseOutHandler,\n      mouseMoveHandler,\n      clickHandler\n    } = this.props;\n\n    const calculateDate = (v) => this.parseDate(v);\n\n    const calculateR = (d) => this.getRadius(data, d, dotRadius);\n    const calculateCX = (d) => (\n        (xType === 'time')\n          ? x(calculateDate(d.x))\n          : x(d.x));\n    const calculateCY = (d) => y(d.y);\n\n    const getFill = (d) => this.getFill(d);\n    const getStroke = (d) => this.getStroke(d);\n\n    const mouseOver = (d) => mouseOverHandler(d, lastEvent);\n    const mouseOut = (d) => mouseOutHandler(d, lastEvent);\n    const mouseMove = (d) => mouseMoveHandler(d, lastEvent);\n    const click = (d) => clickHandler(d, lastEvent);\n\n    const circle = this.getCircles()\n      .data(data);\n\n    circle\n      .enter()\n      .append('circle')\n      .attr('class', 'dot')\n      .attr('r', calculateR)\n      .attr('cx', calculateCX)\n      .attr('cy', calculateCY)\n      .style('fill', getFill)\n      .style('stroke', getStroke)\n      .on('mouseover', mouseOver)\n      .on('mouseout', mouseOut)\n      .on('mousemove', mouseMove)\n      .on('click', click);\n  }\n\n  transition() {\n    const {\n      axes\n    } = this.props;\n\n    const p = this.calculateChartParameters();\n\n    if (axes) {\n      this.transitionXAxis(p);\n\n      this.transitionYAxis(p);\n    }\n\n    this.transitionChart(p);\n  }\n\n  transitionXAxis({ xAxis }) {\n    this.getXAxis()\n      .transition()\n      .duration(750)\n      .call(xAxis);\n  }\n\n  transitionYAxis({ yAxis }) {\n    this.getYAxis()\n      .transition()\n      .duration(750)\n      .call(yAxis);\n  }\n\n  transitionChart({ x, y }) {\n    const {\n      data,\n      dotRadius,\n      xType,\n      mouseOverHandler,\n      mouseOutHandler,\n      mouseMoveHandler,\n      clickHandler\n    } = this.props;\n\n    const calculateDate = (v) => this.parseDate(v);\n\n    const calculateR = (d) => this.getRadius(data, d, dotRadius);\n    const calculateCX = (d) => (\n        (xType === 'time')\n          ? x(calculateDate(d.x))\n          : x(d.x));\n    const calculateCY = (d) => y(d.y);\n\n    const mouseOver = (d) => mouseOverHandler(d, lastEvent);\n    const mouseOut = (d) => mouseOutHandler(d, lastEvent);\n    const mouseMove = (d) => mouseMoveHandler(d, lastEvent);\n    const click = (d) => clickHandler(d, lastEvent);\n\n    const getFill = (d) => this.getFill(d);\n    const getStroke = (d) => this.getStroke(d);\n\n    const n = data.length;\n    const circle = this.getCircles()\n      .data(data);\n\n    if (n) {\n      circle\n        .transition()\n        .duration(750)\n        .attr('r', calculateR)\n        .attr('cx', calculateCX)\n        .attr('cy', calculateCY);\n\n      circle\n        .style('fill', getFill)\n        .style('stroke', getStroke)\n        .on('mouseover', mouseOver)\n        .on('mouseout', mouseOut)\n        .on('mousemove', mouseMove)\n        .on('click', click);\n\n      circle\n        .enter()\n        .append('circle')\n        .attr('class', 'dot')\n        .attr('r', calculateR)\n        .attr('cx', calculateCX)\n        .attr('cy', calculateCY)\n        .style('fill', getFill)\n        .style('stroke', getStroke)\n        .on('mouseover', mouseOver)\n        .on('mouseout', mouseOut)\n        .on('mousemove', mouseMove)\n        .on('click', click);\n    }\n\n    circle\n      .exit()\n      .remove();\n  }\n\n  createSvgNode({ m, w, h }) {\n    const node = createElement('svg');\n    node.setAttribute('width', w + m.left + m.right);\n    node.setAttribute('height', h + m.top + m.bottom);\n    return node;\n  }\n\n  createSvgRoot({ node, m }) {\n    return select(node)\n      .append('g')\n      .attr('transform', `translate(${m.left}, ${m.top})`);\n  }\n\n  createXAxis({ m, innerW, innerH, root }) {\n    const {\n      yAxisOrientRight,\n      axisLabels: { x: label }\n    } = this.props;\n\n    const uid = this.uid;\n\n    const group = root\n      .append('g')\n      .attr('class', 'x axis')\n      .attr('id', `scatterplot-x-axis-${uid}`)\n      .attr('transform', `translate(0, ${innerH})`);\n\n    if (label) {\n      group\n        .append('text')\n        .attr('class', 'label')\n        .attr('x',\n            (yAxisOrientRight)\n              ? 0\n              : innerW)\n        .attr('y', m.bottom + axisMargin)\n        .style('text-anchor',\n            (yAxisOrientRight)\n              ? 'start'\n              : 'end')\n        .text(label);\n    }\n  }\n\n  createYAxis({ m, innerW, root }) {\n    const {\n      yAxisOrientRight,\n      axisLabels: { y: label }\n    } = this.props;\n\n    const uid = this.uid;\n\n    const group = root\n      .append('g')\n      .attr('class', 'y axis')\n      .attr('id', `scatterplot-y-axis-${uid}`)\n      .attr('transform',\n        (yAxisOrientRight)\n          ? `translate(${innerW}, 0)`\n          : 'translate(0, 0)');\n\n    if (label) {\n      group\n        .append('text')\n        .attr('class', 'label')\n        .attr('transform', 'rotate(-90)')\n        .attr('y',\n          (yAxisOrientRight)\n            ? -25 + m.right\n            : 10 - m.left\n        )\n        .attr('dy', '.71em')\n        .style('text-anchor', 'end')\n        .text(label);\n    }\n  }\n\n  createScatterplotChart({ root }) {\n    const uid = this.uid;\n\n    root\n      .append('g')\n      .attr('id', `scatterplot-chart-${uid}`);\n  }\n\n  createStyle() {\n    const {\n      style,\n      grid,\n      verticalGrid,\n      yAxisOrientRight\n    } = this.props;\n\n    const uid = this.uid;\n    const scope = `.scatterplot-chart-${uid}`;\n    const axisStyles = getAxisStyles(grid, verticalGrid, yAxisOrientRight);\n    const rules = merge({}, defaultStyles, style, axisStyles);\n\n    return (\n      <Style\n        scopeSelector={scope}\n        rules={rules}\n      />\n    );\n  }\n\n  parseDate(v) {\n    const {\n      datePattern\n    } = this.props;\n\n    const datePatternParser = (\n      dateParser[datePattern] || (\n      dateParser[datePattern] = parse(datePattern)));\n\n    return datePatternParser(v);\n  }\n\n  calculateChartParameters() {\n    const {\n      axes,\n      data,\n      margin,\n      width,\n      height,\n      dotRadius,\n      xType,\n      yType,\n      xDomainRange,\n      yDomainRange,\n      yAxisOrientRight\n    } = this.props;\n\n    /*\n     * We could \"bind\"!\n     */\n    const parseDate = (v) => this.parseDate(v);\n\n    const m = margin || this.calculateMargin(axes, dotRadius * 2, yAxisOrientRight);\n    const w = width;\n    const h = height + (dotRadius * 3);\n\n    const innerW = this.calculateInnerW(width, m);\n    const innerH = this.calculateInnerH(height, m);\n\n    const defaultXDomainRange = calculateDomainRange(xDomainRange, xType, parseDate);\n    const defaultYDomainRange = calculateDomainRange(yDomainRange, yType, parseDate);\n\n    const x = this.createDomainRangeGenerator(\n      'x', defaultXDomainRange, data, xType, innerW, yAxisOrientRight);\n    const y = this.createDomainRangeGenerator(\n      'y', defaultYDomainRange, data, yType, innerH, yAxisOrientRight);\n\n    const xAxis = this.calculateXAxis({ m, h, x, innerW });\n    const yAxis = this.calculateYAxis({ m, y, innerW });\n\n    const node = this.createSvgNode({ m, w, h });\n    const root = this.createSvgRoot({ node, m });\n\n    return {\n      m,\n      w,\n      h,\n      innerW,\n      innerH,\n      x,\n      y,\n      xAxis,\n      yAxis,\n      node,\n      root\n    };\n  }\n\n  render() {\n    const {\n      axes\n    } = this.props;\n\n    const p = this.calculateChartParameters();\n\n    if (axes) {\n      this.createXAxis(p);\n\n      this.createYAxis(p);\n    }\n\n    this.createScatterplotChart(p);\n\n    const uid = this.uid;\n    const className = `scatterplot-chart-${uid}`;\n    const {\n      node\n    } = p;\n\n    return (\n      <div ref=\"scatterplotChart\" className={className}>\n        {this.createStyle()}\n        {node.toReact()}\n      </div>\n    );\n  }\n}\n"]}