webpackJsonp([6],[function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{"default":e}}function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var d=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();Object.defineProperty(t,"__esModule",{value:!0});var i=n(4),c=a(i),u=n(24),s=a(u),f=n(21),p=n(71),m=a(p),y=n(20),h=n(25),g=a(h),E=[{key:"Cats",value:100},{key:"Dogs",value:200},{key:"Other",value:50}],x=[{key:"Cats",value:100,color:"#aaac84"},{key:"Dogs",value:200,color:"#dce7c5"},{key:"Other",value:50,color:"#e3a51a"}],b=[{color:"#aaac84"},{color:"#dce7c5"},{color:"#e3a51a"}],v={".legend":{backgroundColor:"#f9f9f9",border:"1px solid #e5e5e5",borderRadius:"12px",fontSize:"0.8em",maxWidth:"300px",padding:"12px"}},k={".legend":{backgroundColor:"#f9f9f9",border:"1px solid #e5e5e5",borderRadius:"12px",fontSize:"0.8em",maxWidth:"480px",padding:"12px"}},S=[{type:"One",x:1,y:5},{type:"Two",x:3,y:1},{type:"Three",x:0,y:6},{type:"Four",x:5,y:2},{type:"Five",x:4,y:4},{type:"Six",x:5,y:9},{type:"Seven",x:9,y:1},{type:"Eight",x:5,y:6},{type:"Nine",x:3,y:9},{type:"Ten",x:7,y:9}],C=function(e){function t(e){l(this,t);var n=r(this,Object.getPrototypeOf(t).call(this,e));return n.state={active:!1},n}return o(t,e),d(t,[{key:"toggleState",value:function(){this.setState({active:!this.state.active})}},{key:"render",value:function(){var e=this.state.active?"menu active":"menu";return c["default"].createElement("div",null,c["default"].createElement("aside",{id:"menu",className:e},c["default"].createElement("a",{id:"menuToggle",className:"menu__toggle","aria-hidden":"true",href:"#",onClick:this.toggleState.bind(this)},c["default"].createElement("span",null,"Toggle menu")),c["default"].createElement("nav",{className:"menu__nav"},c["default"].createElement("ul",null,c["default"].createElement("li",null,c["default"].createElement("a",{href:"../",className:"menu__all-charts"},"← All charts"))),c["default"].createElement(g["default"],{items:["introduction","basic","horizontal","config","styles","scatterplot"],currentClassName:"active"},c["default"].createElement("li",null,c["default"].createElement("a",{href:"#introduction"},"Introduction")),c["default"].createElement("li",null,c["default"].createElement("a",{href:"#basic"},"Basic")),c["default"].createElement("li",null,c["default"].createElement("a",{href:"#horizontal"},"Horizontal")),c["default"].createElement("li",null,c["default"].createElement("a",{href:"#config"},"Config")),c["default"].createElement("li",null,c["default"].createElement("a",{href:"#styles"},"Styles")),c["default"].createElement("li",null,c["default"].createElement("a",{href:"#scatterplot"},"Scatterplot"))))),c["default"].createElement("div",{className:"content"},c["default"].createElement("h1",null,"The React Easy Chart Legend"),c["default"].createElement("h2",{id:"introduction"},"Introduction"),c["default"].createElement("p",null,"The legend component provides a key to the data and is designed to work with the Pie and Scatter plot charts. The legend component is easily cusomised via css"),c["default"].createElement("h2",{id:"basic"},"Basic"),c["default"].createElement("p",null,"Simply pass the same data used for the chart and provide a data id (dataId) for the label."),c["default"].createElement("pre",null,c["default"].createElement("code",{dangerouslySetInnerHTML:{__html:(0,y.escapeHTML)("\nconst pieData = [\n  {key: 'Cats', value: 100},\n  {key: 'Dogs', value: 200},\n  {key: 'Other', value: 50}\n];\n\n<PieChart data={pieData} size={300} />\n\n<Legend data={pieData} dataId={'key'} />\n            ")}})),c["default"].createElement("div",null,c["default"].createElement(f.PieChart,{data:E,size:300}),c["default"].createElement(f.Legend,{data:E,dataId:"key"}),c["default"].createElement("pre",null,c["default"].createElement("code",{dangerouslySetInnerHTML:{__html:(0,y.escapeHTML)("\n<Legend data={pieData} dataId={'value'} />\n              ")}})),c["default"].createElement(f.Legend,{data:E,dataId:"value"})),c["default"].createElement("h2",{id:"horizontal"},"Horizontal"),c["default"].createElement("p",null,"Pass `horizontal` as a parameter to switch the list items from block to inline-block"),c["default"].createElement("pre",null,c["default"].createElement("code",{dangerouslySetInnerHTML:{__html:(0,y.escapeHTML)("\n<Legend data={pieData} dataId={'key'} horizontal />\n            ")}})),c["default"].createElement("div",null,c["default"].createElement(f.PieChart,{data:E,size:300}),c["default"].createElement(f.Legend,{data:E,dataId:"key",horizontal:!0})),c["default"].createElement("h2",{id:"config"},"Config"),c["default"].createElement("p",null,"React Easy Charts use ",c["default"].createElement("a",{href:"https://github.com/mbostock/d3/wiki/Ordinal-Scales#category20"},"d3.scale.category20")," to generate a list of default colours. If your chart has a custom colour scheme, pass this colour array to the config property."),c["default"].createElement("pre",null,c["default"].createElement("code",{dangerouslySetInnerHTML:{__html:(0,y.escapeHTML)("\nconst pieDataCustom = [\n  {key: 'Cats', value: 100, color: '#aaac84'},\n  {key: 'Dogs', value: 200, color: '#dce7c5'},\n  {key: 'Other', value: 50, color: '#e3a51a'}\n];\n\nconst config = [\n  {color: '#aaac84'},\n  {color: '#dce7c5'},\n  {color: '#e3a51a'}\n];\n\n<PieChart data={pieDataCustom} size={300} />\n\n<Legend data={pieDataCustom} dataId={'key'} config={config}/>\n            ")}})),c["default"].createElement("div",null,c["default"].createElement(f.PieChart,{data:x,size:300,padding:20}),c["default"].createElement(f.Legend,{data:x,dataId:"key",config:b,horizontal:!0})),c["default"].createElement("h2",{id:"styles"},"Styles"),c["default"].createElement("p",null,"Legend is a styled unordered list and can be easily customised by overriding (all or parts of) the default styles. Simply create a javascript based style object and pass this in through the styles parameter"),c["default"].createElement("pre",null,c["default"].createElement("code",{dangerouslySetInnerHTML:{__html:(0,y.escapeHTML)("\n/* default component styles */\nconst defaultStyles = {\n  '.legend': {\n    'list-style': 'none',\n    margin: 0,\n    padding: 0\n  },\n  '.legend li': {\n    display: 'block',\n    lineHeight: '24px',\n    marginRight: '24px',\n    marginBottom: '6px',\n    paddingLeft: '24px',\n    position: 'relative'\n  },\n  '.legend li.horizontal': {\n    display: 'inline-block'\n  },\n  '.legend .icon': {\n    width: '12px',\n    height: '12px',\n    background: 'red',\n    borderRadius: '6px',\n    position: 'absolute',\n    left: '0',\n    top: '50%',\n    marginTop: '-6px'\n  }\n};\n\n/* example override */\nconst customStyle = {\n  '.legend': {\n    backgroundColor: '#f9f9f9',\n    border: '1px solid #e5e5e5',\n    borderRadius: '12px',\n    fontSize: '0.8em',\n    maxWidth: '300px',\n    padding: '12px'\n  }\n};\n\n<Legend\n  data={pieDataCustom}\n  dataId={'key'}\n  config={config}\n  styles={customStyle}\n  horizontal\n/>\n            ")}})),c["default"].createElement("div",null,c["default"].createElement(f.PieChart,{data:x,size:300,padding:20,innerHoleSize:150}),c["default"].createElement(f.Legend,{data:x,dataId:"key",config:b,styles:v,horizontal:!0})),c["default"].createElement("h2",{id:"scatterplot"},"Scatterplot"),c["default"].createElement("p",null,"A scatterplot example"),c["default"].createElement("pre",null,c["default"].createElement("code",{dangerouslySetInnerHTML:{__html:(0,y.escapeHTML)("\nconst bigData = [\n  {\n    'type': 'One',\n    'x': 1,\n    'y': 5\n  },\n  {\n    'type': 'Two',\n    'x': 3,\n    'y': 1\n  },\n  {\n    'type': 'Three',\n    'x': 0,\n    'y': 6\n  },\n  {\n    'type': 'Four',\n    'x': 5,\n    'y': 2\n  },\n  {\n    'type': 'Five',\n    'x': 4,\n    'y': 4\n  },\n  {\n    'type': 'Six',\n    'x': 5,\n    'y': 9\n  },\n  {\n    'type': 'Seven',\n    'x': 9,\n    'y': 1\n  },\n  {\n    'type': 'Eight',\n    'x': 5,\n    'y': 6\n  },\n  {\n    'type': 'Nine',\n    'x': 3,\n    'y': 9\n  },\n  {\n    'type': 'Ten',\n    'x': 7,\n    'y': 9\n  }\n];\n\nconst scatterStyle = {\n  '.legend': {\n    backgroundColor: '#f9f9f9',\n    border: '1px solid #e5e5e5',\n    borderRadius: '12px',\n    fontSize: '0.8em',\n    maxWidth: '480px',\n    padding: '12px'\n  }\n};\n\n<ScatterplotChart\n  data={bigData}\n  width={480}\n  height={270}\n  axes\n/>\n<Legend\n  data={bigData}\n  dataId={'type'}\n  config={config}\n  styles={scatterStyle}\n  horizontal\n/>\n            ")}})),c["default"].createElement(m["default"],{data:S,width:480,height:270,axes:!0}),c["default"].createElement(f.Legend,{data:S,dataId:"type",config:b,styles:k,horizontal:!0})))}}]),t}(c["default"].Component);t["default"]=C,s["default"].render(c["default"].createElement(C,null),document.getElementById("root"))}]);